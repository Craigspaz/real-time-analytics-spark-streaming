{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(SO0016n) - RealTime-Analytics with Spark Streaming VPC Stack: Stack builds VPC spanning 1 AZ's with public and private subnets.",
    "Parameters": {
        "EnvironmentName": {
            "Description": "The name of the environment you are creating (e.g. dev, test, qa, prod, lab)",
            "Type": "String",
            "AllowedPattern": "^(?!\\-)(?:[a-zA-Z\\d\\-]{0,62}[a-zA-Z\\d])$",
            "ConstraintDescription": "Must be an alphanumeric name (dashes are allowed, except as the first/last character)."
        },
        "AvailabilityZone1": {
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Description": "AZ 1 in which the VPC will be deployed."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to EC2 instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "MinLength": "3",
            "MaxLength": "41"
        },
        "BastionLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "VPCNetworkPrefix": {
            "Description": "The network prefix (first 2 octets of an IP address) to be used for the VPCs internal network.",
            "Type": "String",
            "Default": "10.0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [{
                "Label": {
                    "default": "VPC Configuration"
                },
                "Parameters": ["VPCNetworkPrefix"]
            }, {
                "Label": {
                    "default": "Environment"
                },
                "Parameters": ["EnvironmentName", "AvailabilityZone1" , "KeyName" , "BastionLocation"]
            }]
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "ap-northeast-1": {
                "HVM64": "ami-35072834",
                "HVMG2": "ami-5dd1ff5c",
                "PV64": "ami-21072820"
            },
            "ap-southeast-1": {
                "HVM64": "ami-d6e1c584",
                "HVMG2": "ami-fabe9aa8",
                "PV64": "ami-20e1c572"
            },
            "ap-southeast-2": {
                "HVM64": "ami-fd4724c7",
                "HVMG2": "ami-e98ae9d3",
                "PV64": "ami-8b4724b1"
            },
            "cn-north-1": {
                "HVM64": "ami-ac57c595",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-a857c591"
            },
            "eu-central-1": {
                "HVM64": "ami-b43503a9",
                "HVMG2": "ami-b03503ad",
                "PV64": "ami-a03503bd"
            },
            "eu-west-1": {
                "HVM64": "ami-748e2903",
                "HVMG2": "ami-00913777",
                "PV64": "ami-aa8f28dd"
            },
            "sa-east-1": {
                "HVM64": "ami-956cc688",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-9d6cc680"
            },
            "us-east-1": {
                "HVM64": "ami-08842d60",
                "HVMG2": "ami-3a329952",
                "PV64": "ami-50842d38"
            },
            "us-west-1": {
                "HVM64": "ami-cfa8a18a",
                "HVMG2": "ami-331b1376",
                "PV64": "ami-c7a8a182"
            },
            "us-west-2": {
                "HVM64": "ami-8786c6b7",
                "HVMG2": "ami-47296a77",
                "PV64": "ami-af86c69f"
            }
        },
        "SubnetMap": {
            "VPC": {
                "CIDR": "0.0/16"
            },
            "Public": {
                "A": "1.0/24"
            },
            "Private": {
                "A": "2.0/24",
                "B": "3.0/24"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Ref": "VPCNetworkPrefix"
                            },
                            {
                                "Fn::FindInMap": [
                                    "SubnetMap",
                                    "VPC",
                                    "CIDR"
                                ]
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "VPC"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Ref": "VPCNetworkPrefix"
                            },
                            {
                                "Fn::FindInMap": [
                                    "SubnetMap",
                                    "Public",
                                    "A"
                                ]
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "Subnet-public-1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "public"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Ref": "VPCNetworkPrefix"
                            },
                            {
                                "Fn::FindInMap": [
                                    "SubnetMap",
                                    "Private",
                                    "A"
                                ]
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "Subnet-private-1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "private"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Ref": "VPCNetworkPrefix"
                            },
                            {
                                "Fn::FindInMap": [
                                    "SubnetMap",
                                    "Private",
                                    "B"
                                ]
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "Subnet-private-2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "private"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "IGW"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "public"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "AttachInternetGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": "InternetGateway",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "RT-public"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "public"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "RT-private-1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "private"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachInternetGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRoute1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "ACL-public"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "public"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "ACL-private"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:network",
                        "Value": "private"
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "InboundAllPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },
        "InboundAllPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "103",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "OutboundPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "PublicSubnet1NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },
        "PrivateSubnet1NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                }
            }
        },
        "VpcEndpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "DependsOn": [
                "VPC",
                "PrivateRouteTable",
                "PublicRouteTable"
            ],
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Principal": "*"
                        }
                    ]
                },
                "RouteTableIds": [
                    {"Ref": "PrivateRouteTable"},
                    {"Ref": "PublicRouteTable"}
                ],
                "ServiceName": { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "NATGateway": {
            "DependsOn": "AttachInternetGateway",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": ["NATIPAddress", "AllocationId"]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "NATIPAddress": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "AttachInternetGateway",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable incoming SSH access",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "BastionLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Fn::Join": [
                                ".",
                                [
                                    {
                                        "Ref": "VPCNetworkPrefix"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "SubnetMap",
                                            "VPC",
                                            "CIDR"
                                        ]
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "EnvironmentName"
                                    },
                                    "SG-SSH"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "x:environment",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    },
                    {
                        "Key": "x:appid",
                        "Value": "Sample"
                    }
                ]
            }
        },
        "BastionHost": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "AttachInternetGateway",
            "Properties": {
                "InstanceType": "t2.large",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMI", {
                        "Ref": "AWS::Region"
                    }, {
                        "Fn::FindInMap": ["AWSInstanceType2Arch", "t2.medium", "Arch"]
                    }]
                },
                "NetworkInterfaces": [{
                    "GroupSet": [{
                        "Ref": "BastionSecurityGroup"
                    }],
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "DeleteOnTermination": "true",
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    }
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "Bastion Host"
                }]
            }
        },
        "PrivateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access from vpc cidr",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "SourceSecurityGroupId" : {
                        "Ref": "BastionSecurityGroup"
                    }
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "PrivateSecurityGroup"
                }]
            }
        },
        "InternalTrafficSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Internal Security Group for Administration and PortForwarding",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "SourceSecurityGroupId" : {
                        "Ref": "BastionSecurityGroup"
                    }
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "InternalTrafficSecurityGroup"
                }]
            }
        },
        "BastionRecoveryAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 15 consecutive minutes.",
                "Namespace": "AWS/EC2" ,
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "15",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [ {"Fn::Join" : ["", ["arn:aws:automate:", { "Ref" : "AWS::Region" }, ":ec2:recover" ]]} ],
                "Dimensions": [{"Name": "InstanceId","Value": {"Ref": "BastionHost"}}]
            }
        }
    },
    "Outputs": {
        "VpcId": {
            "Description": "VpcId of the newly created VPC",
            "Value": {
                "Ref": "VPC"
            }
        },
        "PublicSubnet1": {
            "Description": "SubnetId of the primary public subnet",
            "Value": {
                "Ref": "PublicSubnet1"
            }
        },
        "PrivateSubnet1": {
            "Description": "SubnetId of the primary private subnet",
            "Value": {
                "Ref": "PrivateSubnet1"
            }
        },
        "PrivateSubnet2": {
            "Description": "SubnetId of the primary private subnet",
            "Value": {
                "Ref": "PrivateSubnet2"
            }
        },
        "AvailabilityZone1": {
            "Description": "The Availability Zones the Subnets were created in",
            "Value": {
                "Ref": "AvailabilityZone1"
            }
        },
        "VPCEndpoint": {
            "Description": "S3 VPC Endpoint",
            "Value": {
                "Ref": "VpcEndpoint"
            }
        },
        "BastionHost": {
            "Description": "Kinesis Stream Producer EC2",
            "Value": {
                "Fn::GetAtt": [
                    "BastionHost",
                    "PublicDnsName"
                ]
            }
        },
        "BastionSecurityGroup": {
            "Description": "SecurityGroupId for allowing remote SSH Access",
            "Value": {
                "Ref": "BastionSecurityGroup"
            }
        },
        "PrivateSecurityGroupId": {
            "Description": "Security group for private servers",
            "Value": {
                "Ref": "PrivateSecurityGroup"
            }
        },
        "InternalTrafficSecurityGroupId": {
            "Description": "Security group for Bastion Host Connectivity",
            "Value": {
                "Ref": "InternalTrafficSecurityGroup"
            }
        }
    }
}