{"paragraphs":[{"text":"import java.util.Date\nimport com.amazonaws.auth.DefaultAWSCredentialsProviderChain\nimport com.amazonaws.services.kinesis.AmazonKinesisClient\nimport org.apache.spark.streaming.Seconds\nimport com.amazonaws.regions.RegionUtils\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.StreamingContext._\nimport org.apache.spark.streaming.kinesis.KinesisUtils \nimport org.apache.spark.sql.types.{StringType, StructField, StructType}\nimport org.apache.spark.sql.{DataFrame, Row, SQLContext}\nimport org.apache.spark.SparkConf\nimport org.apache.spark.storage.StorageLevel\nimport com.amazonaws.services.kinesis.clientlibrary.lib.worker.InitialPositionInStream\nimport org.apache.spark.rdd.RDD\nimport org.apache.hadoop.io.compress.GzipCodec\nimport org.apache.spark.sql.SparkSession\n\n\n  \n  val credentials = new DefaultAWSCredentialsProviderChain().getCredentials()\n  require(credentials != null,\n      \"No AWS credentials found. Please specify credentials using one of the methods specified \" +\n        \"in http://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/credentials.html\")\n\n  val kinesisClient = new AmazonKinesisClient(credentials)\n  val appName = \"app-myStream-demo-22\"\n  val streamName = \"myStream\"\n  val region = \"us-east-1\"\n  val numShards = kinesisClient.describeStream(streamName).getStreamDescription().getShards().size\n  val numStreams = numShards\n  val batchInterval = Seconds(1)\n  val endpointUrl = s\"https://kinesis.${region}.amazonaws.com\" \n  val initialPosition = InitialPositionInStream.LATEST\n  val storageLevel = StorageLevel.MEMORY_AND_DISK_2\n","dateUpdated":"2016-11-12T20:53:45+0000","config":{"lineNumbers":true,"tableHide":true,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516467_1721626224","id":"20161025-132959_1153631433","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:53:45+0000","dateFinished":"2016-11-12T20:54:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10386"},{"title":"Create Streaming Context","text":"\nval ssc = new StreamingContext(sc, batchInterval)\nval sparkConf = new SparkConf().setAppName(appName)\nval spark = SparkSession.builder.config(sparkConf).enableHiveSupport().getOrCreate()","dateUpdated":"2016-11-12T20:53:45+0000","config":{"lineNumbers":true,"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516470_1720471977","id":"20161025-133101_2078021872","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:53:50+0000","dateFinished":"2016-11-12T20:54:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10387"},{"text":"val sparkDStreams = (0 until numStreams).map { i =>\n\n KinesisUtils.createStream(ssc,appName,streamName,endpointUrl,region,initialPosition,batchInterval,storageLevel)\n\n    }\n","dateUpdated":"2016-11-12T20:53:45+0000","config":{"tableHide":true,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516470_1720471977","id":"20161025-134242_359508818","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:54:27+0000","dateFinished":"2016-11-12T20:54:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10388"},{"text":"    val unionStreams = ssc.union(sparkDStreams)\n    val items = unionStreams.flatMap(byteArray => new String(byteArray).split(\"\\n\"))\n    val itemStatus = items.map(status => status.toString())","dateUpdated":"2016-11-12T20:53:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516470_1720471977","id":"20161027-203834_369410582","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:54:28+0000","dateFinished":"2016-11-12T20:54:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10389"},{"text":"   val outDateFormat = new java.text.SimpleDateFormat(\"yyyy/MM/dd/HH/mm\")\n    \n   case class Record(zipcode: String,ProductName: String,price: BigInt,timestamp: String)\n   \n   items.foreachRDD((rdd:RDD[String],time:Time) => {\n\n     import spark.implicits._\n     \n     try {\n           \n        val recordsDS = spark.read.json(rdd).as[Record]\n        recordsDS.createOrReplaceTempView(\"records\")\n        recordsDS.show()\n        \n        val products = spark.sql(\"SELECT ProductName,price FROM records WHERE price >= 40 AND price <= 50\")\n        products.createOrReplaceTempView(\"products\")\n        products.show()\n\n       \n        val outPartitionFolder = outDateFormat.format(new Date(time.milliseconds))\n        products.rdd.coalesce(1).saveAsTextFile(\"%s/%s\".format(\"hdfs:///products\", outPartitionFolder),classOf[GzipCodec])\n        recordsDS.rdd.coalesce(1).saveAsTextFile(\"%s/%s\".format(\"hdfs:///records-output1\", outPartitionFolder),classOf[GzipCodec])\n     \n\n         } catch {\n        case e: Exception => println(\"Empty stream\" + e)\n      }\n        \n\n    })","dateUpdated":"2016-11-12T20:53:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516471_1720087228","id":"20161028-000839_1333707083","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:54:30+0000","dateFinished":"2016-11-12T20:54:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10390"},{"text":"    val batchedStatuses = itemStatus.window(Seconds(60), Seconds(60))\n    val coalesced = batchedStatuses.transform(rdd => rdd.coalesce(1))\n\n    coalesced.foreachRDD((rdd:RDD[String],time:Time) =>  {\n      val outPartitionFolder = outDateFormat.format(new Date(time.milliseconds))\n      rdd.saveAsTextFile(\"%s/%s\".format(\"s3n://streaming-analytics-output/historical1/\", outPartitionFolder),\n        classOf[GzipCodec])\n\n    })","dateUpdated":"2016-11-12T20:53:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516471_1720087228","id":"20161028-183335_655812599","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:54:31+0000","dateFinished":"2016-11-12T20:54:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10391"},{"text":"ssc.start()","dateUpdated":"2016-11-12T20:53:46+0000","config":{"tableHide":true,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516471_1720087228","id":"20161025-135952_1227351448","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:54:34+0000","dateFinished":"2016-11-12T20:54:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10392"},{"text":"ssc.stop(stopSparkContext=true, stopGracefully=true)","dateUpdated":"2016-11-12T20:53:46+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516472_1718163484","id":"20161025-140109_1009711094","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:30:08+0000","dateFinished":"2016-11-12T20:30:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10393"},{"text":"%sql\nshow tables","dateUpdated":"2016-11-12T20:57:06+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"tableName","index":0,"aggr":"sum"}],"values":[{"name":"isTemporary","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"tableName","index":0,"aggr":"sum"},"yAxis":{"name":"isTemporary","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516472_1718163484","id":"20161025-140144_538777914","dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:57:06+0000","dateFinished":"2016-11-12T20:57:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10394","errorMessage":"","focus":true},{"text":"%sql\nSELECT * from records","dateUpdated":"2016-11-12T20:57:09+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"ProductName","index":0,"aggr":"sum"}],"values":[{"name":"price","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ProductName","index":0,"aggr":"sum"},"yAxis":{"name":"price","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516472_1718163484","id":"20161025-140156_1663581574","dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:57:09+0000","dateFinished":"2016-11-12T20:57:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10395","errorMessage":"","focus":true},{"text":"%sql\nSELECT * from products","dateUpdated":"2016-11-12T20:57:28+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"ProductName","index":0,"aggr":"sum"}],"values":[{"name":"price","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ProductName","index":0,"aggr":"sum"},"yAxis":{"name":"price","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478890516472_1718163484","id":"20161025-140504_770569275","dateCreated":"2016-11-11T18:55:16+0000","dateStarted":"2016-11-12T20:57:29+0000","dateFinished":"2016-11-12T20:57:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10396","errorMessage":"","focus":true}],"name":"/KinesisStream","id":"2C24WH9JG","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}